# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: main

on:
  push:
    branches:
      - main
      - develop
    tags:
      - "*"

  pull_request:
    branches:
      - main
      - develop

jobs:
  Test:
    runs-on: ${{ '{{' }} matrix.os {{ '}}' }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        python: ["{{ cookiecutter.python_version }}"]


    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ '{{' }} matrix.python {{ '}}' }} on ${{ '{{' }} matrix.os {{ ''}}' '}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ '{{' }} matrix.python {{ '}}' }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox
      - name: Run tests
        run: |
          nox -s test-cov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "{{ cookiecutter.python_version }}"
      - run: pip install nox
      - run: |
          nox -s lint
{% if cookiecutter.project_type == 'lib' -%}
  Deploy:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && github.repository == '{{uv-demo-pkg}}'

    runs-on: ubuntu-latest

    needs:
      - Test
      - Linting

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "{{ cookiecutter.python_version }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade uv
      - name: Build package
        run: |
          uv build
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ '{{' }} secrets.PYPI_API_TOKEN {{ ''}}' }}
{%- endif %}